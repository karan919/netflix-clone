{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","handleClick","movie","id","trailerurl","key","className","map","onClick","src","poster_path","backdrop_path","alt","name","videoId","opts","height","width","plaerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","index","Math","floor","random","length","console","log","style","backgroundSize","backgroundPosition","backgroundImage","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1dbf716.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;","import React, { useState, useEffect } from \"react\";\nimport YouTube from \"react-youtube\";\nimport axios from \"./axios\";\nimport \"./Row.css\";\nimport movieTrailer from \"movie-trailer\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    // console.table(movies);\n    fetchData();\n  }, [fetchUrl]);\n\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    plaerVars: {\n      autoplay: 1,\n    },\n  };\n\n  const handleClick = async (movie) => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      let trailerurl = await axios.get(\n        `/movie/${movie.id}/videos?api_key=fb34530271b349314af0de263d16ab5a`\n      );\n      setTrailerUrl(trailerurl.data.results[0]?.key);\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div className={`row__posters`}>\n        {movies.map((movie) => (\n          <img\n            key={movie.id}\n            onClick={() => handleClick(movie)}\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n            src={`${base_url}${\n              isLargeRow ? movie.poster_path : movie.backdrop_path\n            }`}\n            alt={movie.name}\n          />\n        ))}\n      </div>\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n    </div>\n  );\n}\n\nexport default Row;\n","const API_KEY = \"a577dbf8aeb61b5987f66f3be359d4c7\";\n\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=213`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n};\n\nexport default requests;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport requests from \"./requests\";\nimport \"./Banner.css\";\n\nfunction Banner() {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      let index = Math.floor(Math.random() * request.data.results.length - 1);\n      setMovie(request.data.results[index]);\n      return request;\n    }\n    fetchData();\n  }, []);\n  console.log(movie);\n\n  function truncate(str, n) {\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n  }\n\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center center\",\n        backgroundImage: `url(\n                \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\n            )`,\n      }}\n    >\n      <div className=\"banner__contents\">\n        <h1 className=\"banner__title\">\n          {movie?.title || movie?.name || movie?.original_name}\n        </h1>\n        <div className=\"banner__buttons\">\n          <button className=\"banner__button\">Play</button>\n          <button className=\"banner__button\">My List</button>\n        </div>\n        <h1 className=\"banner__description\">\n          {truncate(movie?.overview, 150)}\n        </h1>\n      </div>\n      <div className=\"banner__fadeBottom\" />\n    </header>\n  );\n}\n\nexport default Banner;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Nav.css\";\n\nfunction Nav() {\n  const [show, handleShow] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 100) {\n        handleShow(true);\n      } else handleShow(false);\n    });\n    return () => {\n      window.removeEventListener(\"scroll\");\n    };\n  }, []);\n\n  return (\n    <div className={`nav ${show && \"nav__black\"}`}>\n      <img\n        className=\"nav__logo\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\"\n        alt=\"Netflix logo\"\n      />\n      <img\n        className=\"nav__avatar\"\n        src=\"https://ih0.redbubble.net/image.618427277.3222/flat,1000x1000,075,f.u2.jpg\"\n        alt=\"avatar\"\n      />\n    </div>\n  );\n}\n\nexport default Nav;\n","import \"./App.css\";\nimport Row from \"./Row\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\nimport requests from \"./requests\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      <Row\n        title=\"Netflix Originals\"\n        isLargeRow\n        fetchUrl={requests.fetchNetflixOriginals}\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}